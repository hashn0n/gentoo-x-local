diff --git a/dlls/ntdll/loader.c b/dlls/ntdll/loader.c
index 831f049..44d06bb 100644
--- a/dlls/ntdll/loader.c
+++ b/dlls/ntdll/loader.c
@@ -513,7 +513,7 @@ static FARPROC find_ordinal_export( HMODULE module, const IMAGE_EXPORT_DIRECTORY
         const WCHAR *user = current_modref ? current_modref->ldr.BaseDllName.Buffer : NULL;
         proc = SNOOP_GetProcAddress( module, exports, exp_size, proc, ordinal, user );
     }
-    if (TRACE_ON(relay))
+    if (1)
     {
         const WCHAR *user = current_modref ? current_modref->ldr.BaseDllName.Buffer : NULL;
         proc = RELAY_GetProcAddress( module, exports, exp_size, proc, ordinal, user );
@@ -1627,7 +1627,7 @@ static void load_builtin_callback( void *module, const char *filename )
     SERVER_END_REQ;
 
     /* setup relay debugging entry points */
-    if (TRACE_ON(relay)) RELAY_SetupDLL( module );
+    RELAY_SetupDLL( module );
 }
 
 
diff --git a/dlls/ntdll/relay.c b/dlls/ntdll/relay.c
index ef0af0f..a176642 100644
--- a/dlls/ntdll/relay.c
+++ b/dlls/ntdll/relay.c
@@ -26,6 +26,7 @@
 #include <string.h>
 #include <stdarg.h>
 #include <stdio.h>
+#include <sys/mman.h>
 
 #include "ntstatus.h"
 #define WIN32_NO_STATUS
@@ -742,12 +743,22 @@ void RELAY_SetupDLL( HMODULE module )
     entry_point_rva = descr->entry_point_base - (const char *)module;
     for (i = 0; i < exports->NumberOfFunctions; i++, funcs++)
     {
+        BYTE *addr;
+
         if (!descr->entry_point_offsets[i]) continue;   /* not a normal function */
-        if (!check_relay_include( data->dllname, i + exports->Base, data->entry_points[i].name ))
+        if (0 && !check_relay_include( data->dllname, i + exports->Base, data->entry_points[i].name ))
             continue;  /* don't include this entry point */
 
         data->entry_points[i].orig_func = (char *)module + *funcs;
         *funcs = entry_point_rva + descr->entry_point_offsets[i];
+
+        /* HACK HACK */
+        addr = (BYTE *)module + *funcs;
+        mprotect((void *)((DWORD)addr & 0xfffff000), 0x2000, PROT_READ|PROT_WRITE|PROT_EXEC);
+        *addr = 0xBA;
+        *(void **)(addr + 1) = addr + 7;
+        *(addr + 5) = 0xFF;
+        *(addr + 6) = 0xE2;
     }
 }
 
diff --git a/tools/winebuild/spec32.c b/tools/winebuild/spec32.c
index cb56abe..e125997 100644
--- a/tools/winebuild/spec32.c
+++ b/tools/winebuild/spec32.c
@@ -104,7 +104,7 @@ static void output_relay_debug( DLLSPEC *spec )
 
     /* first the table of entry point offsets */
 
-    output( "\t%s\n", get_asm_rodata_section() );
+    output( "\t.section .data #write\n" );
     output( "\t.align %d\n", get_alignment(4) );
     output( ".L__wine_spec_relay_entry_point_offsets:\n" );
 
@@ -165,6 +165,15 @@ static void output_relay_debug( DLLSPEC *spec )
         args = get_args_size(odp) / get_ptr_size();
         flags = 0;
 
+        /* some space for an absolute jump */
+        output( "\tnop\n");
+        output( "\tnop\n");
+        output( "\tnop\n");
+        output( "\tnop\n");
+        output( "\tnop\n");
+        output( "\tnop\n");
+        output( "\tnop\n");
+
         switch (target_cpu)
         {
         case CPU_x86:
